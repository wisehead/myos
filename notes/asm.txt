

20.bit操作取反操作
C语言：eflag &= ~EFLAGS_AC_BIT;
ASM： XOR DWORD [EBX], 0xffffffff





27.画面模式中的重要信息
WORD    【ES: DI + 0x00】：模式属性    bit7不是1就不好办（能加上0x4000）
WORD    【ES: DI + 0x12】：X的分辨率
WORD    【ES: DI + 0x14】：Y的分辨率
BYTE    【ES: DI + 0x19】：颜色数，必须为8
BYTE    【ES: DI + 0x1b】：颜色的指定方法。必须为4（4是调色板模式）
DWORD   【ES: DI + 0x28】：VRAM的地址。


29.任务切换一些背景
一般操作系统每个切换间隔是0.01~0.03秒
切换动作本身需要消耗0.0001秒。

当你向CPU发出任务切换的指令时，CPU会先把寄存器中的值全部写入内存，这样做是为了当以后切换回这个程序的时候，可以从中断的地方继续运行。
接下来，为了运行下一个程序，CPU会把所有的寄存器的值从内存中读出来，这样就完成了一次切换。

30.TSS

任务状态段，Task Status Segment

struct TSS32 {
    int backlink, esp0, ss0, esp1, ss1, esp2, ss2, cr3;         //任务设置相关信息
    int eip, eflags, eax, ecx, edx, ebx, esp, ebp, esi, edi;    //32位寄存器
    int es, cs, ss, ds, fs, gs;                                 //16位寄存器
    int ldtr, iomap;                                            //任务设置相关
};

第一行：
任务设置相关信息，在执行任务切换的时候这些成员不会被写入。

第二行：
32位寄存器

第三行：
16位寄存器

第四行：
任务设置相关。ldtr = 0，iomap = 0x400000000









 











